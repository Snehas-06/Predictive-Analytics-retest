# -*- coding: utf-8 -*-
"""LVADSUSR121_ANOMALY_LAB4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15ySnPUnMxoquBb5WyYfM4A9FeYXGNRDi
"""

#importing libraries and reading data
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.ensemble import IsolationForest
from sklearn.preprocessing import StandardScaler, LabelEncoder
df4 = pd.read_csv('/content/drive/MyDrive/Predictive analytics Practice/anomaly_train.csv')
print(df4)

#Getting information about dataset
df4.info()

#Printing top 5 rows
df4.head()

#EDA
#Checking for null values
df4.isnull().sum()

# Handle missing values in the dataset
df4.fillna(0, inplace=True)  # we assume missing values to be replaced with 0

#Feature Engineering can be done if needed
#Since no specific feature engineering is mentioned in the description so feature engineering is done

#Summary about dataset
print(df4.describe())

# visualization
sns.pairplot(df4)
plt.show()

#Label encoding for column which are categorical
# Identifying categorical columns
categorical_cols = df4.select_dtypes(include=['object']).columns.tolist()

#Initializing the encoder
label_encoder = LabelEncoder()

# Performing label encoding for each categorical column
for col in categorical_cols:
    df4[col] = label_encoder.fit_transform(df4[col])

# Excluding datetime before Feature Scaling
X4 = df4.drop(['Time'], axis=1)

#Standardization
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X4)

# Detecting anomaly using Isolation Forest
outliers_detected = IsolationForest(contamination=0.05, random_state=42)
outlier = outliers_detected.fit_predict(X_scaled)

df4['anomaly_flag'] = np.where(outlier == -1, 'Anomaly', 'Normal')

#upcoming actions can be taken based on the 'anomaly_flag'

# Printing flagged anomalies for further process
print("Flagged Anomalies:")
print(df4[df4['anomaly_flag'] == 'Anomaly'])

"""This model finally helps to identify anomaly and helps in freezing accounts and notify customers for fraud activities"""